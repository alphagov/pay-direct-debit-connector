server:
  applicationConnectors:
    - type: http
      port: 0
  adminConnectors:
    - type: http
      port: 0

logging:
    level: INFO
    appenders:
      - type: console
        threshold: ALL
        timeZone: UTC
        target: stdout
        logFormat: "[%thread] %highlight(%-5level) %cyan(%logger{15}) - %msg %n"
links:
  frontendUrl: http://Frontend/

graphite:
  host: localhost
  port: 8092

proxy:
  host: localhost
  port: 1234

goCardless:
  accessToken: accesstoken
  webhookSecret: ElfJ-3tF9I_zutNVK2lBABQrw-BgAhkZKIlvmbgk
  environment: sandbox
  clientUrl: http://localhost:10107

executorService:
  timeoutInSeconds: ${AUTH_READ_TIMEOUT_SECONDS:-1}
  threadsPerCpu: ${NUMBER_OF_THREADS_PER_CPU:-100}

notify:
  mandateFailedTemplateId: test-template-id
  mandateCancelledTemplateId: test-template-id
  paymentConfirmedTemplateId: test-template-id
  apiKey: ${NOTIFY_API_KEY:-pay-notify-api-key}
  notificationBaseURL: https://stubs.pymnt.localdomain
  emailNotifyEnabled: false

database:
  driverClass: org.postgresql.Driver
  user:
  password:
  url:

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "SELECT '1'"

  # the timeout before a connection validation queries fail
  validationQueryTimeout: 2s

  # The initial size of the connection pool
  initialSize: 4

  # the minimum number of connections to keep open
  minSize: 4

  # the maximum number of connections to keep open
  maxSize: 8

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute
